#convert number field to string first
#then concatenate with a space
str(!fldLUC!)+ ' '+ !LUC_Desc!

#Join
#join fields together (including nulls) into a new field with underscore separator
#https://community.esri.com/blogs/dan_patterson/2016/11/03/before-i-forget-18-those-pesky-null-things
#there is a for loop in the argument
"_".join([str(i) for i in [ !STR_PRE!, !STR_NAME!, !STR_TYPE!, !STR_SUFFIX! ] if i])


#Concatenate - THIS DOESN'T WORK AS WELL AS .join()
#http://blogs.esri.com/esri/arcgis/2010/08/30/concatenate/
#
# "*args" allows this routine to accept any number of field values.
# the values are passed as a Python tuple, essentially a
# non-editable list
#
def concat(*args):
 
  # Initialize the return value to an empty string,
  # then set the separator character
  #
  retval = ""
  sep = " "
 
  # For each value passed in...
  #
  for t in args:
    # Convert to a string (this catches any numbers),
    # then remove leading and trailing blanks
    #
    s = str(t).strip()
 
    # Add the field value to the return value, using the separator
    # defined above
    #
    if s <> '':
      retval += sep + s
 
  # Strip of any leading separators before returning the value
  #
  return retval.lstrip(sep)
